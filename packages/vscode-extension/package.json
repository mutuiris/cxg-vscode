{
  "name": "@cxg/vscode-extension",
  "displayName": "CXG - ContextExtendedGuard",
  "description": "Intelligent security layer for AI-assisted development with ContextExtendedGuard protection",
  "version": "0.1.0",
  "publisher": "cxg-team",
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Other",
    "Linters"
  ],
  "keywords": [
    "security",
    "ai",
    "privacy",
    "code-protection",
    "assistant",
    "contextextendedguard",
    "cxg",
    "mcp",
    "javascript",
    "typescript"
  ],
  "activationEvents": [
    "onLanguage:javascript",
    "onLanguage:typescript",
    "onLanguage:javascriptreact",
    "onLanguage:typescriptreact"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "cxg.enable",
        "title": "Enable Protection",
        "category": "ContextExtendedGuard"
      },
      {
        "command": "cxg.disable",
        "title": "Disable Protection",
        "category": "ContextExtendedGuard"
      },
      {
        "command": "cxg.scanFile",
        "title": "Scan Current File",
        "category": "ContextExtendedGuard"
      },
      {
        "command": "cxg.showReport",
        "title": "Show Security Report",
        "category": "ContextExtendedGuard"
      },
      {
        "command": "cxg.showSettings",
        "title": "Open Settings",
        "category": "ContextExtendedGuard"
      },
      {
        "command": "cxg.scanReactProject",
        "title": "Scan React Project",
        "category": "ContextExtendedGuard"
      },
      {
        "command": "cxg.scanNodeProject",
        "title": "Scan Node.js Project",
        "category": "ContextExtendedGuard"
      },
      {
        "command": "cxg.analyzePackageJson",
        "title": "Analyze Package.json",
        "category": "ContextExtendedGuard"
      },
      {
        "command": "cxg.sanitizeAndCopy",
        "title": "Sanitize & Copy Code",
        "category": "ContextExtendedGuard"
      },
      {
        "command": "cxg.startMCPServer",
        "title": "Start MCP Server (AI Integration)",
        "category": "ContextExtendedGuard"
      },
      {
        "command": "cxg.stopMCPServer",
        "title": "Stop MCP Server",
        "category": "ContextExtendedGuard"
      },
      {
        "command": "cxg.mcpStatus",
        "title": "MCP Server Status",
        "category": "ContextExtendedGuard"
      },
      {
        "command": "cxg.analyzeForAI",
        "title": "Analyze Code for AI Assistant",
        "category": "ContextExtendedGuard"
      }
    ],
    "configuration": {
      "title": "ContextExtendedGuard",
      "properties": {
        "cxg.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable/disable ContextExtendedGuard protection"
        },
        "cxg.securityLevel": {
          "type": "string",
          "enum": [
            "strict",
            "balanced",
            "permissive"
          ],
          "default": "balanced",
          "description": "Security analysis strictness level"
        },
        "cxg.offlineMode": {
          "type": "boolean",
          "default": false,
          "description": "Enable offline-only mode (no server communication)"
        },
        "cxg.autoScan": {
          "type": "boolean",
          "default": true,
          "description": "Automatically scan files on save"
        },
        "cxg.enableMCPServer": {
          "type": "boolean",
          "default": true,
          "description": "Enable MCP server for AI assistant integration"
        },
        "cxg.frameworkDetection": {
          "type": "boolean",
          "default": true,
          "description": "Enable automatic JavaScript framework detection"
        },
        "cxg.mcpAutoStart": {
          "type": "boolean",
          "default": true,
          "description": "Automatically start MCP server on extension activation"
        },
        "cxg.mcpPort": {
          "type": "number",
          "default": 3000,
          "description": "Port for MCP server (if applicable)"
        }
      }
    },
    "menus": {
      "commandPalette": [
        {
          "command": "cxg.scanReactProject",
          "when": "editorLangId == javascript || editorLangId == typescript || editorLangId == javascriptreact || editorLangId == typescriptreact"
        },
        {
          "command": "cxg.sanitizeAndCopy",
          "when": "editorHasSelection"
        }
      ],
      "editor/context": [
        {
          "command": "cxg.analyzeForAI",
          "when": "editorLangId == javascript || editorLangId == typescript",
          "group": "contextextendedguard"
        },
        {
          "command": "cxg.sanitizeAndCopy",
          "when": "editorHasSelection",
          "group": "contextextendedguard"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "package": "vsce package",
    "publish": "vsce publish"
  },
  "devDependencies": {
    "@types/vscode": "^1.101.0",
    "@types/node": "24.x",
    "typescript": "^5.8.3",
    "@vscode/test-electron": "^2.5.2"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.15.1"
  }
}